{"version":3,"sources":["components/slide-dautuhoanmy/bg-desktop.webp","components/slide-dautuhoanmy/motion-slide.tsx","components/slide-dautuhoanmy/use-cycled-list.tsx","components/slide-dautuhoanmy/desktop.tsx"],"names":["Bullet","styled","Box","props","isActive","css","MotionBox","m","MotionSlide","withSize","animationSpeed","indicatorSxProps","list","size","doubledList","useRef","Children","map","child","i","cloneElement","key","useState","current","slice","returnedList","setReturnedList","pos","setPos","middle","useMemo","rs","length","next","useCallback","newPos","newReturnedList","produce","draft","shift","push","previous","headPos","pop","unshift","useCycledList","toArray","children","slidesToShow","newChildren","center","Math","round","intervalRef","useEffect","speed","setInterval","clearInterval","slideWidth","totalGap","width","variants","initial","opacity","x","flex","animate","index","exit","innerVariants","scale","sx","display","alignItems","height","transform","gap","ml","mr","AnimatePresence","layout","transition","duration","style","originX","originY","justifyContent","custom","className","gridTemplateColumns","gridGap","range","Bg","BgBox","StyledText","Typography","Desktop","useWindowDimensions","position","top","left","bottom","overflow","right","ratio","src","bg","slidesData","slides","slide","id","params","image","layers","text"],"mappings":"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","file":"static/js/13.015d859f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bg-desktop.3ce90e71.webp\";","import {\n  Children,\n  PropsWithChildren,\n  ReactElement,\n  useEffect,\n  useMemo,\n  useRef,\n} from \"react\";\nimport { useCycledList } from \"./use-cycled-list\";\nimport { Box, css, styled, SxProps } from \"@mui/material\";\nimport { AnimatePresence, m } from \"framer-motion\";\nimport { SizeMeProps, withSize } from \"react-sizeme\";\nimport { range } from \"lodash\";\n\nconst GAP = 16;\n\nconst Bullet = styled(Box)<{ isActive: boolean }>`\n  height: 0.7rem;\n  width: 0.7rem;\n  border-radius: 50%;\n  border: 1px solid #333;\n  ${(props: any) =>\n    props.isActive &&\n    css`\n      border-color: #a01f26;\n      background-color: #a01f26;\n      outline: 1px solid #a01f26;\n      outline-offset: 0.45rem;\n    `}\n`;\n\ntype MotionSlideProps = PropsWithChildren<\n  {\n    slidesToShow: number;\n    speed?: number;\n    animationSpeed?: number;\n    indicatorSxProps?: SxProps;\n  } & SizeMeProps\n>;\n\nconst MotionBox = m(Box);\n\nconst MotionSlide = withSize()(function MotionSlide(\n  props: MotionSlideProps\n): JSX.Element {\n  const { animationSpeed = 0.55, indicatorSxProps } = props;\n  const [newChildren, prev, next, { current }] = useCycledList(\n    Children.toArray(props.children) as unknown as ReactElement[],\n    {\n      size: props.slidesToShow + 2,\n    }\n  );\n  const center = Math.round((props.slidesToShow + 1) / 2);\n\n  const intervalRef = useRef<NodeJS.Timeout>();\n  useEffect(() => {\n    if (props.speed) intervalRef.current = setInterval(next, props.speed);\n    return () => {\n      if (intervalRef.current) clearInterval(intervalRef.current);\n    };\n  }, [props.speed, next]);\n\n  const slideWidth = useMemo(() => {\n    const totalGap = GAP * (props.slidesToShow - 1);\n    return (props.size.width! * 1.0 - totalGap) / (props.slidesToShow + 1);\n  }, [props.slidesToShow, props.size]);\n\n  const variants = useMemo(() => {\n      return {\n        initial: { opacity: 0, x: \"200%\", flex: 0 },\n        animate: ({ index }: { index: number }) => ({\n          opacity: index === 0 || index === props.slidesToShow + 1 ? 0 : 1,\n          x: 0,\n          flex: index === center ? 2 : 1,\n        }),\n        exit: { opacity: 0, x: \"-200%\", flex: 0 },\n      };\n    }, [center, props.slidesToShow]),\n    innerVariants = useMemo(\n      () => ({\n        initial: {\n          // display: \"none\",\n          width: 0,\n        },\n        animate: ({ index }: { index: number }) => ({\n          // display: \"block\",\n          width: slideWidth,\n          scale: index === center ? 1.8 : 1,\n        }),\n        exit: {\n          // display: \"none\",\n          width: 0,\n        },\n      }),\n      [center, slideWidth]\n    );\n\n  return (\n    <Box>\n      <Box\n        sx={{\n          display: \"flex\",\n          alignItems: \"center\",\n          height: 300,\n          transform: `translateY(-50%)`,\n          gap: `${GAP}px`,\n          ml: `-${slideWidth}px`,\n          mr: `-${slideWidth}px`,\n        }}\n      >\n        <AnimatePresence>\n          {newChildren.map((child, index) => {\n            return (\n              <MotionBox\n                layout\n                key={child.key}\n                transition={{ duration: animationSpeed }}\n                variants={variants}\n                initial={\"initial\"}\n                animate={\"animate\"}\n                exit={\"exit\"}\n                style={{ originX: 0.5, originY: 0.5 }}\n                sx={{ display: \"flex\", justifyContent: \"center\" }}\n                custom={{ index }}\n                className={index === center ? \"center\" : \"\"}\n              >\n                <MotionBox\n                  layout\n                  variants={innerVariants}\n                  transition={{ duration: animationSpeed }}\n                  custom={{ index }}\n                  style={{\n                    width: slideWidth,\n                  }}\n                >\n                  {child}\n                </MotionBox>\n              </MotionBox>\n            );\n          })}\n        </AnimatePresence>\n      </Box>\n      <Box sx={indicatorSxProps}>\n        <Box\n          sx={{\n            display: \"grid\",\n            gridTemplateColumns: `repeat(${props.slidesToShow},1fr)`,\n            gridGap: \"2rem\",\n          }}\n        >\n          {range(props.slidesToShow).map((index) => (\n            <Bullet isActive={index === current}></Bullet>\n          ))}\n        </Box>\n      </Box>\n    </Box>\n  );\n});\n\nexport default MotionSlide;\n","import {\n  Children,\n  cloneElement,\n  ReactElement,\n  useCallback,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport produce, { Draft } from \"immer\";\n\nexport type UseCycledListOptions = {\n  size: number;\n};\ntype Callback = () => void;\nexport function useCycledList<T extends ReactElement>(\n  list: T[],\n  { size }: UseCycledListOptions\n): [T[], Callback, Callback, { current: number }] {\n  const doubledList = useRef([\n    ...list,\n    ...(Children.map(list, (child, i) =>\n      cloneElement(child, { key: `cloned__${i}` })\n    ) as unknown as T[]),\n  ]);\n  const [returnedList, setReturnedList] = useState<T[]>(() =>\n      doubledList.current.slice(0, size)\n    ),\n    [pos, setPos] = useState(size - 1);\n\n  const middle = useMemo(() => {\n    let rs = pos - (size - 1) / 2;\n    if (rs < 0) rs += list.length;\n    if (rs >= list.length) rs -= list.length;\n    return rs;\n  }, [pos, size, list.length]);\n\n  const next = useCallback(() => {\n    const newPos = (pos + 1) % doubledList.current.length;\n    const newReturnedList = produce(returnedList, (draft) => {\n      draft.shift();\n      draft.push(doubledList.current[newPos] as unknown as Draft<T>);\n    });\n    setReturnedList(newReturnedList);\n    setPos(newPos);\n  }, [returnedList, pos]);\n\n  const previous = useCallback(() => {\n    let newPos = pos - 1;\n    if (newPos < 0) newPos += list.length;\n    let headPos = newPos - list.length;\n    if (headPos < 0) headPos += list.length;\n    const newReturnedList = produce(returnedList, (draft) => {\n      draft.pop();\n      draft.unshift(list[headPos] as unknown as Draft<T>);\n    });\n    setReturnedList(newReturnedList);\n    setPos(newPos);\n  }, [list, returnedList, pos]);\n\n  return [\n    returnedList,\n    previous,\n    next,\n    {\n      current: middle,\n    },\n  ];\n}\n","import { HoanMySlidesData } from \"../assets/hoanmy\";\nimport { Box, styled, Typography } from \"@mui/material\";\nimport bg from \"./bg-desktop.webp\";\nimport { AspectRatio } from \"@hungphongbk/vth-sdk\";\nimport useWindowDimensions from \"../commons/responsives\";\nimport MotionSlide from \"./motion-slide\";\nimport \"./raleway.css\";\n\ntype DesktopProps = {\n  slidesData: HoanMySlidesData;\n};\n\nconst Bg = styled(\"img\")`\n  width: 100%;\n  height: auto;\n  object-fit: cover;\n  object-position: center;\n`;\nconst BgBox = styled(Box)`\n  &:after {\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    background-color: rgba(0, 0, 0, 0.46);\n    display: block;\n    content: \"\";\n  }\n`;\nconst StyledText = styled(Typography)`\n  color: #a01f26;\n  font-weight: 600;\n  text-align: center;\n  font-size: 12px;\n  font-family: Raleway;\n  display: inline-block;\n\n  will-change: transform;\n  transition: transform 0.6s ease;\n  transform: scale(1);\n  transform-origin: top center;\n  .center & {\n    transform: translateY(-0.5rem) scale(0.75);\n  }\n`;\n\nexport default function Desktop(props: DesktopProps): JSX.Element {\n  const { width, height } = useWindowDimensions();\n  return (\n    <Box\n      sx={{\n        width: \"100vw\",\n        height: \"100vh\",\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        bottom: 0,\n        overflow: \"hidden\",\n      }}\n    >\n      <BgBox\n        sx={{\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          right: 0,\n        }}\n      >\n        <AspectRatio ratio={`${width}/${(height * 2) / 3}`}>\n          <Bg src={bg} />\n        </AspectRatio>\n      </BgBox>\n      <Box\n        sx={{\n          position: \"absolute\",\n          top: \"calc(66.66vh - 1rem)\",\n          left: `${10000.0 / 1920}vw`,\n          right: `${10000.0 / 1920}vw`,\n        }}\n      >\n        <MotionSlide\n          slidesToShow={5}\n          speed={3000}\n          animationSpeed={0.6}\n          indicatorSxProps={{\n            position: \"fixed\",\n            bottom: \"3rem\",\n            left: \"50%\",\n            transform: \"translateX(-50%)\",\n          }}\n        >\n          {props.slidesData.slides.map((slide) => (\n            <Box\n              key={slide.id}\n              data-key={slide.id}\n              sx={{ position: \"relative\" }}\n            >\n              <AspectRatio ratio={\"4/3\"}>\n                <img src={slide.params.bg.image} />\n              </AspectRatio>\n              <StyledText\n                sx={{\n                  position: \"absolute\",\n                  top: `calc(100% + 16px)`,\n                  left: 0,\n                  right: 0,\n                }}\n              >\n                {slide.layers[1].text}\n              </StyledText>\n            </Box>\n          ))}\n        </MotionSlide>\n      </Box>\n    </Box>\n  );\n}\n"],"sourceRoot":""}