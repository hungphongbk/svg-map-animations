{"version":3,"sources":["components/slide-dautuhoanmy/bg-desktop.webp","components/slide-dautuhoanmy/motion-slide.tsx","components/slide-dautuhoanmy/use-cycled-list.tsx","components/slide-dautuhoanmy/desktop.tsx"],"names":["MotionBox","m","Box","MotionSlide","props","list","size","useState","slice","returnedList","setReturnedList","pos","useRef","next","useCallback","current","length","console","log","newReturnedList","produce","draft","shift","push","previous","headPos","pop","unshift","useCycledList","Children","toArray","children","slidesToShow","newChildren","center","Math","round","map","c","key","intervalRef","useEffect","speed","setInterval","clearInterval","sx","display","gap","alignItems","height","AnimatePresence","child","index","layout","transition","duration","initial","opacity","x","flex","animate","exit","style","originX","originY","Bg","styled","BgBox","Desktop","useWindowDimensions","width","position","top","left","bottom","overflow","right","ratio","src","bg","slidesData","slides","slide","Stack","id","params","image"],"mappings":"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","file":"static/js/15.d1dc7d11.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bg-desktop.3ce90e71.webp\";","import {\n  Children,\n  PropsWithChildren,\n  ReactElement,\n  useEffect,\n  useRef,\n} from \"react\";\nimport { useCycledList } from \"./use-cycled-list\";\nimport { Box } from \"@mui/material\";\nimport { AnimatePresence, m } from \"framer-motion\";\n\ntype MotionSlideProps = PropsWithChildren<{\n  slidesToShow: number;\n  speed?: number;\n}>;\n\nconst MotionBox = m(Box);\n\nconst spring = {\n  type: \"tween\",\n};\n\nexport default function MotionSlide(props: MotionSlideProps): JSX.Element {\n  const [newChildren, prev, next] = useCycledList(\n    Children.toArray(props.children) as unknown as ReactElement[],\n    {\n      size: props.slidesToShow,\n    }\n  );\n\n  const center = Math.round((props.slidesToShow - 1) / 2);\n\n  console.log(newChildren.map((c) => c.key));\n\n  const intervalRef = useRef<NodeJS.Timeout>();\n  useEffect(() => {\n    if (props.speed) intervalRef.current = setInterval(next, props.speed);\n    return () => {\n      if (intervalRef.current) clearInterval(intervalRef.current);\n    };\n  }, [props.speed, next]);\n\n  return (\n    <Box sx={{ display: \"flex\", gap: 0, alignItems: \"center\", height: 300 }}>\n      <AnimatePresence>\n        {newChildren.map((child, index) => {\n          return (\n            <MotionBox\n              layout\n              key={child.key}\n              transition={{ duration: 0.3 }}\n              initial={{ opacity: 0, x: \"200%\", flex: 0 }}\n              animate={{ opacity: 1, x: 0, flex: index === center ? 2 : 1 }}\n              exit={{ opacity: 0, x: \"-200%\", flex: 0 }}\n              style={{ originX: 0.5, originY: 0.5 }}\n            >\n              {child}\n            </MotionBox>\n          );\n        })}\n      </AnimatePresence>\n    </Box>\n  );\n}\n","import { useCallback, useRef, useState } from \"react\";\nimport produce, { Draft } from \"immer\";\n\nexport type UseCycledListOptions = {\n  size: number;\n};\ntype Callback = () => void;\nexport function useCycledList<T>(\n  list: T[],\n  { size }: UseCycledListOptions\n): [T[], Callback, Callback] {\n  const [returnedList, setReturnedList] = useState<T[]>(() =>\n      list.slice(0, size)\n    ),\n    pos = useRef(size - 1);\n\n  const next = useCallback(() => {\n    pos.current = (pos.current + 1) % list.length;\n    console.log(pos);\n    const newReturnedList = produce(returnedList, (draft) => {\n      draft.shift();\n      draft.push(list[pos.current] as unknown as Draft<T>);\n    });\n    setReturnedList(newReturnedList);\n  }, [list, returnedList]);\n\n  const previous = useCallback(() => {\n    pos.current--;\n    if (pos.current < 0) pos.current += list.length;\n    let headPos = pos.current - list.length;\n    if (headPos < 0) headPos += list.length;\n    const newReturnedList = produce(returnedList, (draft) => {\n      draft.pop();\n      draft.unshift(list[headPos] as unknown as Draft<T>);\n    });\n    setReturnedList(newReturnedList);\n  }, [list, returnedList]);\n\n  return [returnedList, previous, next];\n}\n","import { HoanMySlidesData } from \"../assets/hoanmy\";\nimport { Box, Stack, styled } from \"@mui/material\";\nimport bg from \"./bg-desktop.webp\";\nimport { AspectRatio } from \"@hungphongbk/vth-sdk\";\nimport useWindowDimensions from \"../commons/responsives\";\nimport MotionSlide from \"./motion-slide\";\n\ntype DesktopProps = {\n  slidesData: HoanMySlidesData;\n};\n\nconst Bg = styled(\"img\")`\n  width: 100%;\n  height: auto;\n  object-fit: cover;\n  object-position: center;\n`;\nconst BgBox = styled(Box)`\n  &:after {\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    background-color: rgba(0, 0, 0, 0.46);\n    display: block;\n    content: \"\";\n  }\n`;\n\nexport default function Desktop(props: DesktopProps): JSX.Element {\n  const { width, height } = useWindowDimensions();\n  return (\n    <Box\n      sx={{\n        width: \"100vw\",\n        height: \"100vh\",\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        bottom: 0,\n        overflow: \"hidden\",\n      }}\n    >\n      <BgBox\n        sx={{\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          right: 0,\n        }}\n      >\n        <AspectRatio ratio={`${width}/${(height * 2) / 3}`}>\n          <Bg src={bg} />\n        </AspectRatio>\n      </BgBox>\n      <Box\n        sx={{\n          position: \"absolute\",\n          top: \"66.66vh\",\n          left: `${10000.0 / 1920}vw`,\n          right: `${10000.0 / 1920}vw`,\n        }}\n      >\n        <MotionSlide slidesToShow={5} speed={5000}>\n          {props.slidesData.slides.map((slide) => (\n            <Stack gap={2} key={slide.id} data-key={slide.id}>\n              <AspectRatio ratio={\"4/3\"}>\n                <img src={slide.params.bg.image} />\n              </AspectRatio>\n            </Stack>\n          ))}\n        </MotionSlide>\n      </Box>\n    </Box>\n  );\n}\n"],"sourceRoot":""}