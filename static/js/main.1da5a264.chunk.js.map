{"version":3,"sources":["components/commons/responsives.tsx","index.tsx","components/FirstSlide/index.tsx","components/SecondSlide.tsx","App.tsx","reportWebVitals.ts","index-web.tsx"],"names":["Desktop","children","useMediaQuery","minWidth","Mobile","maxWidth","getXSizeMob","w","getYSizeMob","h","tlwhMob","y","x","top","left","width","height","Responsive","props","d","m","require","loadable","FirstSlide","SecondSlide","App","useEffect","WebFont","load","google","families","LazyMotion","features","domAnimation","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HAAA,uFAGaA,EAAU,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,SAExB,OADkBC,wBAAc,CAAEC,SAAU,MACzBF,EAAW,MAEnBG,EAAS,SAAC,GAAuB,IAArBH,EAAoB,EAApBA,SAEvB,OADiBC,wBAAc,CAAEG,SAAU,MACzBJ,EAAW,MAGzBK,EAAc,SAACC,GAAD,gBAAkBA,EAAI,KAAtB,MAClBC,EAAc,SAACC,GAAD,gBAAkBA,EAAI,KAAtB,MACHC,EAAU,SAACC,EAAWC,EAAWL,EAAWE,GAAlC,MAAiD,CACtEI,IAAKL,EAAYG,GACjBG,KAAMR,EAAYM,GAClBG,MAAOT,EAAYC,GACnBS,OAAQR,EAAYC,KAGf,SAASQ,EAAWC,GAIzB,OACE,qCACE,cAAClB,EAAD,UACE,cAACkB,EAAMC,EAAP,MAEF,cAACf,EAAD,UACE,cAACc,EAAME,EAAP,W,gCC7BR,OAAyCC,EAAQ,K,gLCE3CrB,EAAUsB,aAAS,kBAAM,qEACzBlB,EAASkB,aAAS,kBAAM,uDAGf,SAASC,EAAWL,GACjC,OAAO,cAAC,IAAD,CAAYC,EAAGnB,EAASoB,EAAGhB,ICLpC,IAAMJ,EAAUsB,aAAS,kBAAM,8DAC7BlB,EAASkB,aAAS,kBAAM,8DAGX,SAASE,EAAYN,GAClC,OAAO,cAAC,IAAD,CAAYC,EAAGnB,EAASoB,EAAGhB,ICmBrBqB,MApBf,WAQE,OAPAC,qBAAU,WACRC,IAAQC,KAAK,CACXC,OAAQ,CACNC,SAAU,CAAC,mBAGd,IAED,cAACC,EAAA,EAAD,CAAYC,SAAUC,IAAtB,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAM,IAAKC,QAAS,cAACX,EAAD,MAC3B,cAAC,IAAD,CAAOU,KAAM,IAAKC,QAAS,cAACZ,EAAD,cCPtBa,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCJdQ,QAAQC,IAAI,QACZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bf,M","file":"static/js/main.1da5a264.chunk.js","sourcesContent":["import { useMediaQuery } from \"react-responsive\";\nimport { ComponentType } from \"react\";\n\nexport const Desktop = ({ children }: any) => {\n  const isDesktop = useMediaQuery({ minWidth: 992 });\n  return isDesktop ? children : null;\n};\nexport const Mobile = ({ children }: any) => {\n  const isMobile = useMediaQuery({ maxWidth: 992 });\n  return isMobile ? children : null;\n};\n\nconst getXSizeMob = (w: number) => `${w / 4.14}%`,\n  getYSizeMob = (h: number) => `${h / 8.96}%`;\nexport const tlwhMob = (y: number, x: number, w: number, h: number) => ({\n  top: getYSizeMob(y),\n  left: getXSizeMob(x),\n  width: getXSizeMob(w),\n  height: getYSizeMob(h),\n});\n\nexport function Responsive(props: {\n  d: ComponentType<any>;\n  m: ComponentType<any>;\n}): JSX.Element {\n  return (\n    <>\n      <Desktop>\n        <props.d />\n      </Desktop>\n      <Mobile>\n        <props.m />\n      </Mobile>\n    </>\n  );\n}\n","import React from \"react\";\n\nif (process.env.REACT_APP_ENV === \"web\") require(\"./index-web\");\nelse require(\"./index-plugin\");\n","import { Responsive } from \"../commons/responsives\";\n\nimport loadable from \"@loadable/component\";\n\nconst Desktop = loadable(() => import(\"./FirstSlideDesktop\"));\nconst Mobile = loadable(() => import(\"./FirstSlideMobile\"));\n\ntype FirstSlideProps = {};\nexport default function FirstSlide(props: FirstSlideProps): JSX.Element {\n  return <Responsive d={Desktop} m={Mobile} />;\n}\n","import { PropsWithChildren } from \"react\";\nimport { Responsive } from \"./commons/responsives\";\nimport loadable from \"@loadable/component\";\n\nconst Desktop = loadable(() => import(\"./SecondSlideDesktop\")),\n  Mobile = loadable(() => import(\"./SecondSlideMobile\"));\n\ntype Props = PropsWithChildren<unknown>;\nexport default function SecondSlide(props: Props): JSX.Element {\n  return <Responsive d={Desktop} m={Mobile} />;\n}\n","import React, { useEffect } from \"react\";\nimport WebFont from \"webfontloader\";\nimport { domAnimation, LazyMotion } from \"framer-motion\";\nimport { HashRouter, Route, Routes } from \"react-router-dom\";\nimport \"./App.css\";\nimport FirstSlide from \"./components/FirstSlide\";\nimport SecondSlide from \"./components/SecondSlide\";\n\nfunction App() {\n  useEffect(() => {\n    WebFont.load({\n      google: {\n        families: [\"Montserrat\"],\n      },\n    });\n  }, []);\n  return (\n    <LazyMotion features={domAnimation}>\n      <HashRouter>\n        <Routes>\n          <Route path={\"1\"} element={<SecondSlide />} />\n          <Route path={\"2\"} element={<FirstSlide />} />\n        </Routes>\n      </HashRouter>\n    </LazyMotion>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconsole.log(\"hihi\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}